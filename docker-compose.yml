version: '2'

#  PORTS
#   g api:                1111:8080
#   g docs:               2222:8002
#   g mock:               3333:8003
#   g monitor:            4444:8004
#     storage:            27017:27017
#   g storage-interface:  28000:27000

services:
  api:
    image: poseidon-api
    container_name: poseidon-api
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - '1111:8080'
    networks:
     app_net:
        ipv4_address: 172.16.201.10
  docs:
    image: poseidon-docs
    container_name: poseidon-docs
    build:
      context: .
      dockerfile: Dockerfile.docs
    ports:
      - '2222:8002'
    networks:
      app_net:
        ipv4_address: 172.16.201.11
  mock:
    image: mock-controller
    container_name: mock-controller
    build:
      context: .
      dockerfile: Dockerfile.mock
    ports:
      - '3333:8003'
    networks:
      app_net:
        ipv4_address: 172.16.201.12
    environment:
      - ALLOW_ORIGIN = http://172.16.201.12:8003
    links:
      - monitor:poseidon-monitor
  monitor:
    image: poseidon-monitor
    container_name: poseidon-monitor
    build:
      context: .
      dockerfile: Dockerfile.monitor
    ports:
      - '4444:8004'
    networks:
      app_net:
        ipv4_address: 172.16.201.13
    environment:
      - ALLOW_ORIGIN = http://172.16.201.10:1111
    links:
      - api:poseidon-api
  main:
    image: poseidon-main
    container_name: poseidon-main
    build:
      context: .
      dockerfile: Dockerfile.main
    networks:
      app_net:
        ipv4_address: 172.16.201.14
    links:
      - storage-interface:poseidon-storage-interface
    environment:
      - PRODUCTION=True
  storage:
    image: mongo
    container_name: poseidon-storage
    ports:
      - '27017:27017'
      - '28017:28017'
    networks:
      app_net:
        ipv4_address: 172.16.201.15
    command: --smallfiles --rest --httpinterface
    volumes:
      - /data/db:/data/db
  storage-interface:
    image: poseidon-storage-interface
    container_name: poseidon-storage-interface
    build:
      context: .
      dockerfile: Dockerfile.storage-interface
    ports:
      - '28000:27000'
    networks:
      app_net:
        ipv4_address: 172.16.201.16
    environment:
      - ALLOW_ORIGIN=http://172.16.201.16:28000
    links:
      - storage:poseidon-storage
  periodically:
    image: poseidon-periodically
    container_name: poseidon-periodically
    build:
      context: .
      dockerfile: Dockerfile.periodically
    networks:
      app_net:
        ipv4_address: 172.16.201.17
    links:
      - mock:mock-controller
      - monitor:poseidon-monitor
      - rabbit:poseidon-rabbit
  rabbit:
    image: rabbitmq:management
    container_name: poseidon-rabbit
    ports:
      - '15672:15672'
      - '5672:5672'
    networks:
      app_net:
        ipv4_address: 172.16.201.18


#
# -------------------- PLUGINS --------------------
#
  flowparser:
    image: flowparser
    container_name: flowparser
    build:
      context: ./plugins/features/flowparser/
      dockerfile: Dockerfile
    networks:
      app_net:
        ipv4_address: 172.16.201.19
  ml-port-class:
    image: ml-port-class
    container_name: ml-port-class
    build:
      context: ./plugins/ml_algos/port_classifier/
      dockerfile: Dockerfile
    networks:
      app_net:
        ipv4_address: 172.16.201.20

#
# -------------------- NETWORK  --------------------
#

networks:
  app_net:
    driver: bridge
    driver_opts:
      com.docker.network.enable_1pv6: "false"
    ipam:
      driver: default
      config:
      - subnet: 172.16.201.0/24
        gateway: 172.16.201.1
